openapi: 3.0.1
info:
  title: external-to-osm-tag-mapping
  description: mapping external tags to osm tags - json format
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:8080
paths:
  /schemas:
    get:
      tags:
        - schemas
      summary: get all existing schemas
      operationId: get-schemas
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: 'array'
                items:
                  $ref: '#/components/schemas/schema'
              example:
                [
                  {
                    name: system1,
                    created_at: '2020-12-20T13:32:25Z',
                    updated_at: '2020-12-20T13:32:25Z',
                    mapping: { externalKey1: osmKey1, externalKey2: osmKey2 },
                  },
                  {
                    name: system2,
                    created_at: '2020-12-20T13:32:25Z',
                    updated_at: '2020-12-20T13:32:25Z',
                    mapping: { externalKey1: osmKey1, externalKey2: osmKey2 },
                  },
                ]
        400:
          $ref: '#/components/responses/BadRequest'
        5XX:
          $ref: '#/components/responses/InternalError'
  /schemas/{name}:
    get:
      tags:
        - schemas
      summary: get schema by service name
      operationId: get-schema-by-name
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
          description: the service name
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schema'
              example:
                {
                  name: system1,
                  created_at: '2020-12-20T13:32:25Z',
                  updated_at: '2020-12-20T13:32:25Z',
                  mapping: { externalKey1: osmKey1, externalKey2: osmKey2 },
                }
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/InternalError'
  /schemas/{name}/map:
    post:
      tags:
        - schemas
      operationId: map-schema-attributes-to-osm-tags
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
          description: the service name
      summary: osm tags mapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/geoJson'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
              example: { defaultOsmKey: defaultOsmValue, defaultOsmKey1: defaultOsmValue1, osmKey: externalValue, osmKey1: externalValue1 }
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/InternalError'
components:
  responses:
    BadRequest:
      description: bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example: { message: bad request }
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example: { message: resource not found }
    InternalError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example: { message: internal server error }
  schemas:
    schema:
      type: object
      properties:
        name:
          description: schema name
          type: string
        created_at:
          type: string
          format: date-time
          description: UTC date/time of the schema's creation
        updated_at:
          type: string
          format: date-time
          description: UTC date/time of the schema's update
        mapping:
          description: tags mapping
          type: object
    geoJson:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
        geometry:
          type: object
      required:
        - properties
    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message
